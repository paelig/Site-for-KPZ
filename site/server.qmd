---
title: "Функции server"
---

# filter_repos
```R
filter_repos(repos, filters){}
```

Функция фильтрации списка репозиториев GitHub по комплексным критериям с поддержкой диапазонных значений и категориальных фильтров.

## Особенности
- Гибкая фильтрация по 8 параметрам
- Поддержка диапазонов для числовых значений
- Учет дат создания и обновления
- Специальная обработка категорий "Все"
- Оптимизированная производительность с использованием purrr::keep

## Входные данные
- repos - список репозиториев из get_user_repos()
- filters	- список критериев фильтрации:
    - language - язык программирования ("Все" или конкретный)
    - stars - диапазон звёзд (integer)
    - created_date_range - дата создания (Date или строка)
    - updated_date_range - дата обновления (Date или строка)
    - issues - диапазон открытых issues
    - contributors - диапазон контрибьюторов
    - size - диапазон размера (в MB)
    - license - лицензия ("Все" или конкретная)
    
## Алгоритм фильтрации

Для каждого репозитория проверяются все условия:

1. Язык: Совпадение или "Все"
2. Звёзды: Вхождение в диапазон
3. Дата создания: В заданном периоде
4. Дата обновления: В заданном периоде
5. Issues: Количество в указанных границах
6. Контрибьюторы: Количество в указанных границах
7. Размер: Преобразуется из KB в MB и проверяется диапазон
8. Лицензия: Совпадение или "Все"


# server.R
```R
function(input, output, session) {
  # Основная серверная логика приложения
}
```
## Ключевые модули и функции
### 1. Инициализация окружения
```R
init_renviron()
```
Создает/проверяет .Renviron файл

Устанавливает обязательные переменные:

- GITHUB_TOKEN, YANDEX_FOLDER_ID, YANDEX_API_KEY
- DUCK_DB, COMMITS_TABLE (значения по умолчанию)

Автоматически загружает обновленные переменные

### 2. Управление интерфейсом

Вкладки:

- Главное меню (отчет, коммиты, активность и др.)
- Настройки (переменные окружения, другие параметры)

Фильтры репозиториев:

- Язык, звезды, даты, issues и др.

Анимация переключения видимости

### 3. Работа с данными
#### Реактивные значения:

```R
data <- reactiveValues(
  repos = NULL,
  user_profile = NULL,
  commits = NULL,
  activity_data = NULL,
  language_data = NULL,
  commit_heatmap_data = NULL
)
```

#### Основные обработчики
- Загрузка профиля (get_user_profile)
- Получение репозиториев (get_user_repos)
- Анализ коммитов (get_user_commits_df)
- Подготовка данных для визуализации

### 4. Визуализации
#### Отчет пользователя
- Аватар, статистика, топ языков
- Список репозиториев с фильтрацией

#### Графики
- Активность (issues/forks)
- Языки программирования
- Тепловая карта коммитов
- PCA-анализ

### 5. Анализ аномалий

```R
perform_pca()
detect_outliers()
```
Выявляет нестандартные коммиты

Формирует карточки с деталями:

- Z-score аномалии
- Расстояние в PCA-пространстве
- Дифф изменений

### 6. Интеграция с Yandex GPT

```R
get_response()
format_response()
```

Анализирует git-патчи через LLM

Форматирует отчет о рисках:

Уровни: CRITICAL, WARNING, INFO, SAFE

Рекомендации по исправлению

### 7. Управление настройками
Редактор переменных окружения

Проверка лимитов GitHub API

Система уведомлений

## Особенности реализации
### Безопасность
- Переменные окружения не сохраняются в коде
- Проверка токенов перед запросами

### Производительность
- Кэширование в DuckDB
- Пакетная обработка коммитов
- Оптимизированные SQL-запросы

### Интерактивность
- Анимации интерфейса
- Контекстные подсказки
- Динамическая подгрузка

### Масштабируемость
- Модульная структура
- Поддержка больших наборов данных
- Фоновые процессы

## Пример рабочего процесса
1. Пользователь вводит GitHub-логин
2. Приложение загружает профиль и репозитории
3. Фильтрует репозитории по заданным критериям
4. Анализирует коммиты (сохранение в DuckDB)
5. Строит визуализации:
    - Временные графики
    - Распределение языков
    - PCA-кластеризация
6. Выявляет аномалии:
    - Необычно большие коммиты
    - Подозрительные изменения
7. Формирует интерактивный отчет

## Обработка ошибок
- Проверка API-лимитов
- Graceful degradation при ошибках
- Логирование в файл (logs.log)

## Системные требования
- R 4.0+
- Пакеты: httr, dplyr, ggplot2, plotly
- Доступ к GitHub API и Yandex Cloud

